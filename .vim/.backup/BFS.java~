import java.util.*;
import java.lang.*;
import java.io.*;
 
class BFS
{
    static final char WHITE = 'W';
    static final char GRAY  = 'G';
    static final char BLACK = 'B';

    public static void main (String[] args) throws java.lang.Exception {
        int d = 10;
        int[] T = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3};
        int[] P = {2, 6};
        int q = 11;
        int n = T.length;
        int m = P.length;
        int h = (int)Math.pow(d, m-1) % q;
        int p = 0;
        int t = 0;

        for (int i = 0; i < m; ++i) {
            p = (d*p + P[i]) % q;
            t = (d*t + T[i]) % q;
        }

        for (int s = 0; s <= n-m; ++s) {
        System.out.println("t: " + t);
            if (p == t) {
                boolean foundBad = false;
                for (int i = 0; i < m; ++i) {
                    if (P[i] != T[s+i]) foundBad = true;
                }
                if (foundBad) {
                    System.out.println("spurios");
                } else {
                    System.out.println("patt occ at " + s);
                }
            }
            
            if (s < n-m) {
                t = ((((d*(t - T[s]*h) + T[s+m])) % q) + q ) % q;
            }
        }
    }
}
